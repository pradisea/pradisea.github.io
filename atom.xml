<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rogxxc</title>
  
  <subtitle>riri fans</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yourname.com/"/>
  <updated>2018-01-13T13:29:47.966Z</updated>
  <id>http://yourname.com/</id>
  
  <author>
    <name>Li Yan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python3与Python2共存环境配置</title>
    <link href="http://yourname.com/2018/01/13/Python3%E4%B8%8EPython2%E5%85%B1%E5%AD%98%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://yourname.com/2018/01/13/Python3与Python2共存环境配置/</id>
    <published>2018-01-13T13:11:53.000Z</published>
    <updated>2018-01-13T13:29:47.966Z</updated>
    
    <content type="html"><![CDATA[<p>首先安装python2和python3，安装python3时在windows系统下安装了一个启动器py.exe</p><p>用Python2运行程序时，可用</p><blockquote><p>py -2 xxx.py</p></blockquote><p>用Python3运行程序时</p><blockquote><p>py -3 xxx.py</p></blockquote><p>网上有答案改程序名的，比如python3下的python.exe改成python3.exe，但是这样的话 用pip安装库的时候就会出现问题</p><p>同样可用py来选择给哪个版本安装库(安装requests为例)</p><blockquote><p>py -3 -m install requests</p><p>py -2 -m install requests</p></blockquote><p>还可以在py文件开头申明以哪个版本运行代码，代码开头加入一行#! python2 / #! python3</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先安装python2和python3，安装python3时在windows系统下安装了一个启动器py.exe&lt;/p&gt;
&lt;p&gt;用Python2运行程序时，可用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;py -2 xxx.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用Py
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python个人学习小结</title>
    <link href="http://yourname.com/2017/12/28/Python%E4%B8%AA%E4%BA%BA%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
    <id>http://yourname.com/2017/12/28/Python个人学习小结/</id>
    <published>2017-12-28T10:46:37.000Z</published>
    <updated>2018-01-13T13:29:47.967Z</updated>
    
    <content type="html"><![CDATA[<p>因为本科课程没有Java和Python，又由于个人兴趣与一些需要，所以简单自学一下Python，因为学习过C和C++，这里记录一下姑且当作有C\C++基础重头学Python需要注意的地方。</p><ul><li>Python具有伪代码的特质，它能让你专注于解决问题的方案，而不是语言本身。</li><li>Python开放源代码且具有跨平台性。</li><li>Python不同于C\C++，它不需要将代码编译成二进制码，而是会将源代码转换成字节码再转换成机器语言，使Python代码更便携和易于迁移。</li><li>可用C C++编写例如不想公开的算法部分，在将其运用到Python中。</li><li>Python自带有庞大的标准库，包括正则表达式、文档生成、单元测试、多线程、数据库、网页浏览器、CGI、FTP、邮件、XML、XML-RPC、HTML、WAV 文件、密码系统、GUI（图形用户界面）。</li><li>Python区分大小写</li><li><strong>没有单独的long类型，int可以是任何大小的整数。</strong></li><li>三引号（””” “””or’’’ ‘’’）指定多行字符串，在这之间可以自由使用单引号或双引号。（三引号类似html的pre预格式  实测可以保留之间的空格和换行格式）</li><li><strong>Python没有单独的char类型</strong></li><li>字符串前加r指定原始字符串，r”Newlines are indicated by \n”，应在如使用正则表达式时使用。</li><li>Python 将程序中的任何内容统称为 对象，Python 是强（Strongly）面向对象的，因为所有的一切都是对象， 包括数字、字符串与函数。</li><li><strong>变量只需被赋予某一值。不需要声明或定义数据类型。（i=5 而非 int i=5）</strong></li><li><strong>Python鼓励每一行为为一个独立语句使得可读性更高，如一行需要两个语句，则需要加；号，不同于C C++行与行之间不需要加；号</strong></li><li>如一行代码过多，可使用反斜杠拆分为多个物理行如：<br>s = ‘This is a string. \<br>This continues the string.’<br>输入为This is a string. This continues the string. 这称为显式行链接</li><li>双星号代表乘积，如3**4=（3*3*3*3）=81，//为整除，如13//3=4，</li><li></li></ul><p>随缘更新。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为本科课程没有Java和Python，又由于个人兴趣与一些需要，所以简单自学一下Python，因为学习过C和C++，这里记录一下姑且当作有C\C++基础重头学Python需要注意的地方。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python具有伪代码的特质，它能让你专注于解决问题的方案
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何在新电脑上还原hexo博客</title>
    <link href="http://yourname.com/2017/12/07/%E5%9C%A8%E6%96%B0%E7%94%B5%E8%84%91%E4%B8%8A%E8%BF%98%E5%8E%9Fhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yourname.com/2017/12/07/在新电脑上还原hexo博客/</id>
    <published>2017-12-07T09:03:21.000Z</published>
    <updated>2017-12-07T10:07:11.662Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>当在重装系统/换了新电脑时能继续更新blog，前提是有hexo源文件的情况下，推荐把hexo的源文件也推到github上的另一个分支里（不是master分支），这里只指上述情况如何恢复。</p></blockquote><p>因为之前想学习linux系统，安装了ubuntu，安装好后又删除了win10系统，导致了blog配置文件丢失，这里记录一下解决过程。</p><p>​    首先是在单ubuntu系统下安装win10，经过简单google发现并不能在ubuntu下安装win10（google的网友答复），双系统也得先安装win10. 这里用其他电脑制作了一个U盘启动（随意u盘启动制作工具加一个系统iso文件） 进电脑blos设置U盘首选项启动，进入winpe首先对硬盘进行重新分区（注意备份数据，因为自己把分区表弄乱了<strong>这一步不必要</strong>） 格式化之前的系统分区（ubuntu就没了） 然后用桌面上的pe装机工具加载iso系统文件进行安装，这一步就完成了。</p><p>​    然后是在新的系统恢复hexo的文件，我这里有源文件在的，即source、themes、package.json、_config.yml这些文件，之前在别的blog和知乎里看到很多答案，写的都较为复杂，这里的操作只指符合开头条件的情况下。</p><p>首先安装git：<a href="https://git-scm.com/download/win" target="_blank" rel="external">https://git-scm.com/download/win</a></p><p>默认下一步即可。</p><p>将源文件粘贴到你要放置的位置，进入文件夹内</p><p>将你的git和github、coding帐号绑定：右击打开gitBash 输入</p><blockquote><p>git config –global user.name “你的GitHub/Coding用户名”</p><p>git config –global user.email “你的GitHub/Coding注册邮箱”</p></blockquote><p>因为我们用ssh来同步blog内容，生成ssh密钥：</p><blockquote><p>ssh-keygen -t rsa -C “你的注册邮箱”</p></blockquote><p>连续三个回车，命令行出现一个类似图形的东西即可。</p><p>回到github和coding重新建立新的key，把在.ssh目录下生成的后缀为pub的公钥内容复制下来粘贴进去。</p><p>安装node.js：<a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a></p><p>此时安装了包含环境变量和npm</p><p>这里注意npm国内使用速度很慢且不稳定 这里考虑用taobao的cnpm代替</p><p>地址：<a href="https://npm.taobao.org/" target="_blank" rel="external">https://npm.taobao.org/</a></p><p>还是在git bush里 安装hexo</p><blockquote><p>cnpm install -g hexo-cli </p></blockquote><p>因为我是直接复制了整个hexo源文件，所以进入blog所在的文件夹在git bush里执行</p><blockquote><p>cnpm install hexo-deployer-git –save</p></blockquote><p>此时如果出现下图</p><p><img src="http://oyq2mqadm.bkt.clouddn.com/ssh" alt="avatar"></p><p>输入yes即可</p><blockquote><p>很多人在用ssh git@github.com测试时也会出现最后要求输入yes or no的内容，经过我很久时间的google才 发现输入yes就好了…..尴尬</p></blockquote><p><strong>好了，这时候你就可以继续更新blog了，再次提醒 只适用于开头所提条件，另外不要在备份好的源文件下按照网上教程 输入hexo init 那样会覆盖掉你所有配置好的文件，直接gg</strong>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;当在重装系统/换了新电脑时能继续更新blog，前提是有hexo源文件的情况下，推荐把hexo的源文件也推到github上的另一个分支里（不是master分支），这里只指上述情况如何恢复。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为之前想学习li
      
    
    </summary>
    
    
      <category term="还原，hexo" scheme="http://yourname.com/tags/%E8%BF%98%E5%8E%9F%EF%BC%8Chexo/"/>
    
  </entry>
  
  <entry>
    <title>难过</title>
    <link href="http://yourname.com/2017/11/20/%E9%9A%BE%E8%BF%87/"/>
    <id>http://yourname.com/2017/11/20/难过/</id>
    <published>2017-11-20T14:43:53.000Z</published>
    <updated>2017-12-07T08:22:06.714Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp; &emsp; 生活中不可能每件事都尽如人意的，也不是所有的努力和坚持都是有回报的，也许不对，在这个过程中的每时每刻都是回报吧。</p><p>​    <strong>（还是那句话 梦想还是要有的 哈哈）修改于12.7</strong></p><p>​    安好</p><p>​                                    2017.11.20 23：00</p><p>​                                        学校宿舍</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp; &amp;emsp; 生活中不可能每件事都尽如人意的，也不是所有的努力和坚持都是有回报的，也许不对，在这个过程中的每时每刻都是回报吧。&lt;/p&gt;
&lt;p&gt;​    &lt;strong&gt;（还是那句话 梦想还是要有的 哈哈）修改于12.7&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​   
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>未来还没来</title>
    <link href="http://yourname.com/2017/11/01/%E6%9C%AA%E6%9D%A5%E8%BF%98%E6%B2%A1%E6%9D%A5/"/>
    <id>http://yourname.com/2017/11/01/未来还没来/</id>
    <published>2017-11-01T11:47:16.000Z</published>
    <updated>2017-11-13T14:03:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oyq2mqadm.bkt.clouddn.com/%E5%A5%BD%E7%9C%8B.jpg" alt="avatar"></p><blockquote><p>“别抱怨，别自怜。所有的现状都是你自己选择的，而且当你在开口责怪这种现状的时候，你其实已经享受过它带来了的一切好处。抱怨能说明什么呢，除了你什么都想要的贪，还有你不想做努力的懒。”——转自微博</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://oyq2mqadm.bkt.clouddn.com/%E5%A5%BD%E7%9C%8B.jpg&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“别抱怨，别自怜。所有的现状都是你自己选择的，而且当你在开口责怪这种现状
      
    
    </summary>
    
    
  </entry>
  
</feed>
